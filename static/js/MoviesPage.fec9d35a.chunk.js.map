{"version":3,"sources":["services/api.js","components/MoviesList/moviesList.module.css","components/MoviesList/MoviesList.jsx","components/MoviesPage/MoviesPage.module.css","components/Searchbar/Searchbar.jsx","components/MoviesPage/MoviesPage.jsx"],"names":["fetchMovies","url","a","axios","get","data","console","error","defaults","baseURL","params","api_key","fetchMovieReviews","movieId","api","fetchMovieTrending","fetchMovieSearchQuery","searchQuery","fetchMovieDescription","fetchMovieCast","module","exports","MoviesList","movie","id","title","pathname","useLocation","path","className","s","imageGalleryItem","to","imageGalleryItemImage","src","poster_path","alt","width","Searchbar","onSubmit","useState","setSearchQuery","event","preventDefault","trim","toast","type","autoComplete","value","autoFocus","placeholder","onChange","target","toLowerCase","MoviesPage","navigate","useNavigate","setMovie","loading","setLoading","useEffect","services","results","fetchData","query","onClick","Spinner","imageGallery","map","film"],"mappings":"gMAOeA,E,8EAAf,WAA2BC,GAA3B,iBAAAC,EAAA,+EAE2BC,IAAMC,IAAIH,GAFrC,uBAEYI,EAFZ,EAEYA,KAFZ,kBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,0D,sBALAJ,IAAMK,SAASC,QAAU,+BACzBN,IAAMK,SAASE,OAAS,CACtBC,QAAS,oCAaX,IAgBMC,EAAiB,uCAAG,WAAgBC,GAAhB,SAAAX,EAAA,+EACjBF,EAAY,UAAD,OAAWa,EAAX,eADM,2CAAH,sDAGjBC,EAAM,CACVd,cACAe,mBArByB,WACzB,OAAOf,EAAY,yBAqBnBgB,sBAlB4B,SAAUC,GACtC,OAAOjB,EAAY,wBAAD,OAAyBiB,KAkB3CC,sBAf4B,SAAUL,GACtC,OAAOb,EAAY,UAAD,OAAWa,EAAX,sBAelBM,eAZqB,SAAUN,GAC/B,OAAOb,EAAY,UAAD,OAAWa,EAAX,8BAYlBD,qBAGaE,O,mBC5CfM,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,sBAAwB,4C,iHC+BnFC,MA3Bf,YAAgC,IAAVC,EAAS,EAATA,MACZC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACJC,EAAaC,cAAbD,SACFE,EAAoB,MAAbF,EAAmB,UAAYA,EAE5C,OACE,oBAAIG,UAAWC,IAAEC,iBAAjB,SACE,eAAC,IAAD,CAAMC,GAAE,UAAKJ,EAAL,YAAaJ,GAArB,UACE,qBACEK,UAAWC,IAAEG,sBACbC,IAAG,yCAAoCX,EAAMY,aAC7CC,IAAKb,EAAME,MACXY,MAAM,QAEPZ,S,mBClBTL,EAAOC,QAAU,CAAC,aAAe,mC,yGCwClBiB,EArCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAsCC,mBAAS,IAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KAgBA,OACE,iCACE,uBAAMF,SAZW,SAACG,GACpBA,EAAMC,iBACqB,KAAvB1B,EAAY2B,QAIhBL,EAAStB,GACTwB,EAAe,KAJbI,YAAM,sBASN,UACE,wBAAQC,KAAK,SAAb,SACE,cAAC,IAAD,MAGF,uBACEA,KAAK,OACLC,aAAa,MACbC,MAAO/B,EACPgC,WAAS,EACTC,YAAY,2BACZC,SA3Ba,SAAC,GAA2B,IAAfH,EAAc,EAAxBI,OAAUJ,MAChCP,EAAeO,EAAMK,wB,+CCyCVC,UAzCI,WACjB,IAAMC,EAAWC,cACjB,EAA0BhB,mBAAS,IAAnC,mBAAOjB,EAAP,KAAckC,EAAd,KACA,EAAsCjB,mBAAS,IAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WAAM,4CAGd,8BAAA1D,EAAA,+EAE8B2D,IAAS7C,sBAAsBC,GAF7D,gBAEY6C,EAFZ,EAEYA,QACRL,EAASK,GAHb,gDAKIxD,QAAQC,MAAR,MALJ,yBAOIoD,GAAW,GAPf,6EAHc,sBACT1C,IACL0C,GAAW,GAFG,mCAadI,MACC,CAAC9C,IAOJ,OACE,gCACE,cAAC,EAAD,CAAWsB,SAPW,SAACyB,GACzBvB,EAAeuB,GACfT,EAAS,UAAD,OAAWS,OAMjB,wBAAQC,QAAS,kBAAMV,EAAS,MAAhC,qBACCG,GAAW,cAACQ,EAAA,EAAD,IACZ,oBAAIrC,UAAWC,IAAEqC,aAAjB,SACG5C,EAAM6C,KAAI,SAACC,GAAD,OACT,cAAC/C,EAAA,EAAD,CAAYC,MAAO8C,GAAWA,EAAK7C","file":"static/js/MoviesPage.fec9d35a.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\naxios.defaults.params = {\n  api_key: \"5c841683b693f172a27449c1327aa5b5\",\n};\n\nasync function fetchMovies(url) {\n  try {\n    const { data } = await axios.get(url);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nconst fetchMovieTrending = function () {\n  return fetchMovies(`/trending/movie/day?`);\n};\n\nconst fetchMovieSearchQuery = function (searchQuery) {\n  return fetchMovies(`/search/movie?&query=${searchQuery}`);\n};\n\nconst fetchMovieDescription = function (movieId) {\n  return fetchMovies(`/movie/${movieId}?&language=en-US`);\n};\n\nconst fetchMovieCast = function (movieId) {\n  return fetchMovies(`/movie/${movieId}/credits?&language=en-US`);\n};\n\nconst fetchMovieReviews = async function (movieId) {\n  return fetchMovies(`/movie/${movieId}/reviews?`);\n};\nconst api = {\n  fetchMovies,\n  fetchMovieTrending,\n  fetchMovieSearchQuery,\n  fetchMovieDescription,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"moviesList_imageGalleryItem__hjDHj\",\"imageGalleryItemImage\":\"moviesList_imageGalleryItemImage__1hy5R\"};","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./moviesList.module.css\";\n\nfunction MoviesList({ movie }) {\n  const { id, title } = movie;\n  const { pathname } = useLocation();\n  const path = pathname === \"/\" ? \"/movies\" : pathname;\n\n  return (\n    <li className={s.imageGalleryItem}>\n      <Link to={`${path}/${id}`}>\n        <img\n          className={s.imageGalleryItemImage}\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          width=\"300\"\n        />\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMoviesList.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"MoviesPage_imageGallery__3OEWk\"};","import { useState } from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport { toast } from \"react-toastify\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchQuery(value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      toast(\"Enter your query!\");\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <ImSearch />\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={searchQuery}\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from \"react\";\nimport Searchbar from \"../Searchbar\";\nimport services from \"../../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport MoviesList from \"../MoviesList\";\nimport Spinner from \"../Spinner\";\nimport s from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const { results } = await services.fetchMovieSearchQuery(searchQuery);\n        setMovie(results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [searchQuery]);\n\n  const handleQueryChange = (query) => {\n    setSearchQuery(query);\n    navigate(`?query=${query}`);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleQueryChange} />\n      <button onClick={() => navigate(\"/\")}>GO BACK</button>\n      {loading && <Spinner />}\n      <ul className={s.imageGallery}>\n        {movie.map((film) => (\n          <MoviesList movie={film} key={film.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}